<!-- views/profile.ejs (Enhanced with decimal precision support) -->
<!DOCTYPE html>
<html>
<head>
  <title>Profile | Discord Login</title>
  <link rel="icon" type="image/x-icon" href="/images/loga.ico">
  <link rel="stylesheet" href="/style.css">
  <link rel="stylesheet" href="/css/subscription.css">
  <link rel="stylesheet" href="/css/header.css">
  <link rel="stylesheet" href="/css/footer.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Minecraft&family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
  <style>
    .profile-container {
      max-width: 800px;
      margin: 0 auto;
      padding: 20px;
    }
    
    .user-card {
      background: white;
      border-radius: 12px;
      padding: 30px;
      box-shadow: 0 4px 6px rgba(0,0,0,0.1);
      margin-bottom: 30px;
      text-align: center;
    }
    
    .avatar {
      border-radius: 50%;
      border: 4px solid #007bff;
      margin-bottom: 15px;
    }
    
    .user-info h2 {
      margin: 10px 0 5px 0;
      color: #2c3e50;
    }
    
    .user-info p {
      color: #6c757d;
      margin: 5px 0;
    }
    
    .subscription-card {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border-radius: 12px;
      padding: 25px;
      margin-bottom: 20px;
      position: relative;
      overflow: hidden;
    }
    
    .subscription-card::before {
      content: '';
      position: absolute;
      top: -50%;
      right: -50%;
      width: 100%;
      height: 100%;
      background: linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent);
      transform: rotate(45deg);
      animation: shimmer 3s infinite;
    }
    
    @keyframes shimmer {
      0% { transform: translateX(-100%) rotate(45deg); }
      100% { transform: translateX(100%) rotate(45deg); }
    }
    
    .subscription-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      margin-bottom: 20px;
    }
    
    .subscription-title {
      font-size: 1.5em;
      font-weight: bold;
      margin: 0;
    }
    
    .subscription-status {
      background: #28a745;
      color: white;
      padding: 5px 12px;
      border-radius: 15px;
      font-size: 0.9em;
      font-weight: 500;
    }
    
    .subscription-details {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-bottom: 20px;
    }
    
    .detail-item {
      text-align: left;
    }
    
    .detail-label {
      font-size: 0.9em;
      opacity: 0.8;
      margin-bottom: 5px;
    }
    
    .detail-value {
      font-size: 1.1em;
      font-weight: 500;
    }
    
    .time-left {
      background: rgba(255,255,255,0.1);
      border-radius: 8px;
      padding: 15px;
      margin: 20px 0;
      text-align: center;
    }
    
    .time-left h4 {
      margin: 0 0 10px 0;
      font-size: 1em;
    }
    
    .time-display {
      font-size: 1.2em;
      font-weight: bold;
    }
    
    .progress-container {
      background: rgba(255,255,255,0.2);
      border-radius: 10px;
      height: 20px;
      margin-top: 15px;
      overflow: hidden;
    }
    
    .progress-bar {
      background: linear-gradient(90deg, #28a745, #20c997);
      height: 100%;
      border-radius: 10px;
      transition: width 0.3s ease;
      position: relative;
    }
    
    .progress-bar::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
      animation: progressShine 2s infinite;
    }
    
    @keyframes progressShine {
      0% { transform: translateX(-100%); }
      100% { transform: translateX(100%); }
    }
    
    .no-subscription {
      background: #f8f9fa;
      border: 2px dashed #dee2e6;
      border-radius: 12px;
      padding: 40px;
      text-align: center;
      margin-bottom: 20px;
    }
    
    .no-subscription h3 {
      color: #6c757d;
      margin-bottom: 15px;
    }
    
    .cta-button {
      background: #007bff;
      color: white;
      padding: 12px 24px;
      border: none;
      border-radius: 6px;
      font-size: 1em;
      font-weight: 500;
      text-decoration: none;
      display: inline-block;
      transition: background-color 0.3s;
    }
    
    .cta-button:hover {
      background: #0056b3;
      color: white;
    }
    
    .nav-links {
      text-align: center;
      margin: 20px 0;
    }
    
    .nav-links a {
      margin: 0 15px;
      color: #007bff;
      text-decoration: none;
      font-weight: 500;
    }
    
    .nav-links a:hover {
      text-decoration: underline;
    }
    
    .balance-display {
      background: linear-gradient(135deg, #e8f4f8 0%, #f0f9ff 100%);
      border: 2px solid #bee5eb;
      border-radius: 12px;
      padding: 20px;
      margin: 20px 0;
      text-align: center;
      position: relative;
      overflow: hidden;
    }
    
    .balance-display::before {
      content: '';
      position: absolute;
      top: -2px;
      left: -2px;
      right: -2px;
      bottom: -2px;
      background: linear-gradient(45deg, #007bff, #28a745, #ffc107, #dc3545, #007bff);
      background-size: 300% 300%;
      border-radius: 12px;
      z-index: -1;
      animation: gradientShift 3s ease-in-out infinite;
    }
    
    @keyframes gradientShift {
      0%, 100% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
    }
    
    .balance-label {
      font-size: 1em;
      color: #0c5460;
      margin-bottom: 8px;
      font-weight: 600;
    }
    
    .balance-amount {
      font-size: 1.8em;
      font-weight: bold;
      color: #0c5460;
      font-family: 'Courier New', monospace;
      letter-spacing: 0.5px;
    }
    
    .balance-details {
      font-size: 0.85em;
      color: #6c757d;
      margin-top: 8px;
      font-style: italic;
    }
    
    .decimal-highlight {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    
    .balance-actions {
      margin-top: 15px;
    }
    
    .balance-copy {
      background: none;
      border: 1px solid #007bff;
      color: #007bff;
      padding: 6px 12px;
      border-radius: 20px;
      font-size: 0.8em;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    
    .balance-copy:hover {
      background: #007bff;
      color: white;
    }
    
    .renewal-info {
      background: rgba(255,255,255,0.1);
      border-radius: 8px;
      padding: 15px;
      margin-top: 15px;
    }
    
    .renewal-stats {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 15px;
      margin-top: 10px;
    }
    
    .stat-item {
      text-align: center;
    }
    
    .stat-value {
      font-size: 1.1em;
      font-weight: bold;
      font-family: 'Courier New', monospace;
    }
    
    .stat-label {
      font-size: 0.85em;
      opacity: 0.8;
    }
  </style>
</head>
<!-- Header -->
  <header class="header">
    <nav class="navbar">
        <div class="nav-container">
            <div class="nav-logo">
                <img src="/images/logo.png" alt="Virelia Logo">
                <span>Virelia</span>
            </div>
            <ul class="nav-menu">
                <li><a href="https://virelia.live/">Home</a></li>
                <!-- <li><a href="/about">About</a></li> -->
                <li><a href="https://virelia.live/guide">Guides</a></li>
                <li><a href="https://virelia.live/contact">Contact</a></li>
                <li><a href="http://localhost:3000/minecraft/subscription">Marketplace</a></li>
                <li><a href="/profile">Profile</a></li>
                <li><a href="/auth/logout">Logout</a></li>
            </ul>
            <div class="nav-toggle">
                <i class="fas fa-bars"></i>
            </div>
        </div>
    </nav>
  </header>
<body>
  <div class="profile-container">
    <h1> </h1>  
    <h1>Your Profile</h1>
    
    <div class="nav-links">
      <a href="/">Home</a> |
      <a href="/minecraft/subscription">View Plans</a> |
      <a href="/auth/logout">Logout</a>
    </div>
    
    <% if (user) { %>
      <div class="user-card">
        <img src="https://cdn.discordapp.com/avatars/<%= user._id || user.id %>/<%= user.avatar %>.png" width="120" class="avatar"/>
        <div class="user-info">
          <h2><%= user.discord?.display_name || user.username %></h2>
          <p><strong>Username:</strong> <%= user.discord?.username || user.username %></p>
          <p><strong>Email:</strong> <%= user.email %></p>
        </div>
        
        <% if (user.vv_balance !== undefined) { %>
          <div class="balance-display">
            <div class="balance-label">VV Balance</div>
            <div class="balance-amount">
              <span class="decimal-highlight" id="balance-value"><%
                // Format balance with proper decimals
                let formattedBalance;
                if (user.vv_balance < 1 && user.vv_balance > 0) {
                  formattedBalance = parseFloat(user.vv_balance).toFixed(8).replace(/\.?0+$/, '');
                } else if (user.vv_balance >= 1000) {
                  formattedBalance = user.vv_balance.toLocaleString('en-US', {
                    minimumFractionDigits: 0,
                    maximumFractionDigits: 8
                  });
                } else {
                  formattedBalance = parseFloat(user.vv_balance).toFixed(6).replace(/\.?0+$/, '');
                }
              %><%= formattedBalance %></span> VV
            </div>
            <div class="balance-details">
              <% if (user.vv_balance < 0.001 && user.vv_balance > 0) { %>
                Micro balance • Perfect for small transactions
              <% } else if (user.vv_balance < 1 && user.vv_balance >= 0.001) { %>
                Decimal balance • Precision transactions available
              <% } else if (user.vv_balance >= 1000) { %>
                Premium balance • <%= (user.vv_balance / 1000).toFixed(1) %>K VV available
              <% } else { %>
                Standard balance • Ready for purchases
              <% } %>
            </div>
            <div class="balance-actions">
              <button class="balance-copy" onclick="copyBalance()" title="Copy balance to clipboard">
                Copy Balance
              </button>
            </div>
          </div>
        <% } %>
      </div>
      
      <% if (subscription && subscription.is_active) { %>
        <div class="subscription-card">
          <div class="subscription-header">
            <h3 class="subscription-title"><%= subscription.title %></h3>
            <span class="subscription-status">Active</span>
          </div>
          
          <div class="subscription-details">
            <div class="detail-item">
              <div class="detail-label">Purchased On</div>
              <div class="detail-value"><%= subscription.purchased_at_ist %></div>
            </div>
            <div class="detail-item">
              <div class="detail-label">Expires On</div>
              <div class="detail-value"><%= subscription.expires_at_ist %></div>
            </div>
          </div>
          
          <div class="time-left">
            <h4>Time Remaining</h4>
            <div class="time-display">
              <% if (subscription.time_left.months > 0) { %>
                <%= subscription.time_left.months %> month<%= subscription.time_left.months !== 1 ? 's' : '' %>
              <% } %>
              <% if (subscription.time_left.days > 0) { %>
                <%= subscription.time_left.days %> day<%= subscription.time_left.days !== 1 ? 's' : '' %>
              <% } %>
              <% if (subscription.time_left.hours > 0 && subscription.time_left.total_days < 2) { %>
                <%= subscription.time_left.hours %> hour<%= subscription.time_left.hours !== 1 ? 's' : '' %>
              <% } %>
            </div>
            
            <div class="progress-container">
              <div class="progress-bar" style="width: <%= subscription.progress_percent %>%"></div>
            </div>
            <div style="margin-top: 8px; font-size: 0.9em; opacity: 0.8;">
              <%= subscription.progress_percent %>% completed
            </div>
          </div>
          
          <% if (subscription.renewal_info && subscription.renewal_info.count > 0) { %>
            <div class="renewal-info">
              <h4 style="margin: 0 0 10px 0;">Renewal History</h4>
              <div class="renewal-stats">
                <div class="stat-item">
                  <div class="stat-value"><%= subscription.renewal_info.count %></div>
                  <div class="stat-label">Renewals</div>
                </div>
                <div class="stat-item">
                  <div class="stat-value"><%= subscription.renewal_info.formatted_total_spent || parseFloat(subscription.renewal_info.total_spent || 0).toFixed(6).replace(/\.?0+$/, '') %> VV</div>
                  <div class="stat-label">Total Spent</div>
                </div>
              </div>
              <% if (subscription.renewal_info.last_renewed) { %>
                <div style="margin-top: 10px; font-size: 0.85em; opacity: 0.8;">
                  Last renewed: <%= subscription.renewal_info.last_renewed %>
                </div>
              <% } %>
            </div>
          <% } %>
        </div>
      <% } else { %>
        <div class="no-subscription">
          <h3>No Active Subscription</h3>
          <p>You don't have any active subscriptions. Browse our plans to get started!</p>
          <a href="/minecraft/subscription" class="cta-button">View Subscription Plans</a>
        </div>
      <% } %>
      
    <% } else { %>
      <p>You are not logged in.</p>
      <a href="/">Go Home</a>
    <% } %>
  </div>

  <script>
    // Enhanced formatting function for client-side
    function formatVV(amount, maxDecimals = 8) {
      if (typeof amount !== 'number') {
        amount = parseFloat(amount) || 0;
      }
      
      if (amount < 1 && amount > 0) {
        return amount.toFixed(maxDecimals).replace(/\.?0+$/, '');
      } else if (amount >= 1000) {
        return amount.toLocaleString('en-US', {
          minimumFractionDigits: 0,
          maximumFractionDigits: maxDecimals
        });
      } else {
        return amount.toFixed(6).replace(/\.?0+$/, '');
      }
    }

    // Copy balance to clipboard
    function copyBalance() {
      const balanceElement = document.getElementById('balance-value');
      if (balanceElement) {
        const balanceText = balanceElement.textContent.trim();
        
        if (navigator.clipboard) {
          navigator.clipboard.writeText(balanceText).then(function() {
            showCopyFeedback('Balance copied!');
          }).catch(function(err) {
            console.error('Failed to copy balance: ', err);
            fallbackCopy(balanceText);
          });
        } else {
          fallbackCopy(balanceText);
        }
      }
    }

    // Fallback copy method for older browsers
    function fallbackCopy(text) {
      const textArea = document.createElement('textarea');
      textArea.value = text;
      textArea.style.position = 'fixed';
      textArea.style.left = '-999999px';
      textArea.style.top = '-999999px';
      document.body.appendChild(textArea);
      textArea.focus();
      textArea.select();
      
      try {
        document.execCommand('copy');
        showCopyFeedback('Balance copied!');
      } catch (err) {
        showCopyFeedback('Copy failed');
      }
      
      document.body.removeChild(textArea);
    }

    // Show copy feedback
    function showCopyFeedback(message) {
      const balanceDisplay = document.querySelector('.balance-display');
      const originalBg = balanceDisplay.style.background;
      
      // Create temporary feedback element
      const feedback = document.createElement('div');
      feedback.textContent = message;
      feedback.style.cssText = `
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: rgba(40, 167, 69, 0.9);
        color: white;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 0.9em;
        font-weight: bold;
        z-index: 1000;
        animation: fadeInOut 2s ease-in-out;
      `;
      
      // Add CSS animation
      if (!document.getElementById('copy-feedback-style')) {
        const style = document.createElement('style');
        style.id = 'copy-feedback-style';
        style.textContent = `
          @keyframes fadeInOut {
            0% { opacity: 0; transform: translate(-50%, -50%) scale(0.8); }
            20%, 80% { opacity: 1; transform: translate(-50%, -50%) scale(1); }
            100% { opacity: 0; transform: translate(-50%, -50%) scale(1.2); }
          }
        `;
        document.head.appendChild(style);
      }
      
      balanceDisplay.style.position = 'relative';
      balanceDisplay.appendChild(feedback);
      
      // Remove feedback after animation
      setTimeout(() => {
        if (feedback.parentNode) {
          feedback.parentNode.removeChild(feedback);
        }
      }, 2000);
      
      // Brief highlight effect
      balanceDisplay.style.background = 'linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%)';
      setTimeout(() => {
        balanceDisplay.style.background = originalBg || 'linear-gradient(135deg, #e8f4f8 0%, #f0f9ff 100%)';
      }, 1000);
    }

    // Add hover effects and interactions
    document.addEventListener('DOMContentLoaded', function() {
      // Add hover effect to balance amount
      const balanceAmount = document.querySelector('.balance-amount');
      if (balanceAmount) {
        balanceAmount.addEventListener('mouseenter', function() {
          this.style.transform = 'scale(1.05)';
          this.style.transition = 'transform 0.2s ease';
        });
        
        balanceAmount.addEventListener('mouseleave', function() {
          this.style.transform = 'scale(1)';
        });
      }

      // Add click-to-copy functionality to balance display
      const balanceDisplay = document.querySelector('.balance-display');
      if (balanceDisplay) {
        balanceDisplay.style.cursor = 'pointer';
        balanceDisplay.setAttribute('title', 'Click to copy balance');
        
        balanceDisplay.addEventListener('click', function(e) {
          if (e.target.classList.contains('balance-copy')) {
            return; // Don't interfere with button click
          }
          copyBalance();
        });
      }

      // Enhanced progress bar animation
      const progressBar = document.querySelector('.progress-bar');
      if (progressBar) {
        const targetWidth = progressBar.style.width;
        progressBar.style.width = '0%';
        
        setTimeout(() => {
          progressBar.style.width = targetWidth;
        }, 500);
      }

      // Add tooltip to renewal stats
      const statItems = document.querySelectorAll('.stat-item');
      statItems.forEach(item => {
        const value = item.querySelector('.stat-value');
        const label = item.querySelector('.stat-label');
        
        if (value && label && label.textContent === 'Total Spent') {
          item.setAttribute('title', 'Total amount spent across all subscriptions and renewals');
          item.style.cursor = 'help';
        }
      });
    });
  </script>
</body>
</html>